function param_vector = construct_dyn_param_vector(...
        inertia_xx_com, inertia_yy_com, inertia_zz_com, inertia_xy_com, inertia_yz_com,...
        inertia_zx_com, link_mass, link_x_com, link_y_com, link_z_com, num_links)
    param_vector = zeros(10 * num_links, 1);
    I_mat_com_com = zeros(3, 3, num_links);
    I_mat_joint_joint = zeros(3, 3, num_links);
    I_vec_joint_joint = zeros(6, num_links);
    link_com_link_frame_position_link_frame = zeros(3, num_links);
    for curr_link_index = 1 : num_links
        I_mat_com_com(:, :, curr_link_index) = ...
            [inertia_xx_com(curr_link_index) inertia_xy_com(curr_link_index) inertia_zx_com(curr_link_index); ...
             inertia_xy_com(curr_link_index) inertia_yy_com(curr_link_index) inertia_yz_com(curr_link_index); ...
             inertia_zx_com(curr_link_index) inertia_yz_com(curr_link_index) inertia_zz_com(curr_link_index)];
        link_com_link_frame_position_link_frame(:, curr_link_index) = ...
                                        [link_x_com(curr_link_index);...
                                        link_y_com(curr_link_index);...
                                        link_z_com(curr_link_index)];
        I_mat_joint_joint(:, :, curr_link_index) = ...
            move_inertia_axis(I_mat_com_com(:, :, curr_link_index), ...
            link_mass(curr_link_index), link_com_link_frame_position_link_frame(:, curr_link_index));
        I_vec_joint_joint(:, curr_link_index) = inertia_mat_to_vec(I_mat_joint_joint(:, :, curr_link_index));
        param_vector(10 * (curr_link_index - 1) + 1 : 10 * (curr_link_index), :) = ...
            [I_vec_joint_joint(:, curr_link_index); ...
             link_mass(curr_link_index); ...
             link_mass(curr_link_index) * link_com_link_frame_position_link_frame(:, curr_link_index)];
    end
end